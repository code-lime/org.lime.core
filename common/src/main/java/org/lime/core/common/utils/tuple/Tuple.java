package org.lime.core.common.utils.tuple;

public class Tuple {
    //<editor-fold desc="Tuples">
    //<generator name="system-tuple.js:getAllFunctions()">
    public static <T0>Tuple1<T0> of(T0 val0){ return new Tuple1<>(val0); }
    public static <T0>LockTuple1<T0> lock(T0 val0){ return of(val0).lock(); }
    public static <T0, T1>Tuple2<T0, T1> of(T0 val0, T1 val1){ return new Tuple2<>(val0, val1); }
    public static <T0, T1>LockTuple2<T0, T1> lock(T0 val0, T1 val1){ return of(val0, val1).lock(); }
    public static <T0, T1, T2>Tuple3<T0, T1, T2> of(T0 val0, T1 val1, T2 val2){ return new Tuple3<>(val0, val1, val2); }
    public static <T0, T1, T2>LockTuple3<T0, T1, T2> lock(T0 val0, T1 val1, T2 val2){ return of(val0, val1, val2).lock(); }
    public static <T0, T1, T2, T3>Tuple4<T0, T1, T2, T3> of(T0 val0, T1 val1, T2 val2, T3 val3){ return new Tuple4<>(val0, val1, val2, val3); }
    public static <T0, T1, T2, T3>LockTuple4<T0, T1, T2, T3> lock(T0 val0, T1 val1, T2 val2, T3 val3){ return of(val0, val1, val2, val3).lock(); }
    public static <T0, T1, T2, T3, T4>Tuple5<T0, T1, T2, T3, T4> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4){ return new Tuple5<>(val0, val1, val2, val3, val4); }
    public static <T0, T1, T2, T3, T4>LockTuple5<T0, T1, T2, T3, T4> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4){ return of(val0, val1, val2, val3, val4).lock(); }
    public static <T0, T1, T2, T3, T4, T5>Tuple6<T0, T1, T2, T3, T4, T5> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5){ return new Tuple6<>(val0, val1, val2, val3, val4, val5); }
    public static <T0, T1, T2, T3, T4, T5>LockTuple6<T0, T1, T2, T3, T4, T5> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5){ return of(val0, val1, val2, val3, val4, val5).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6>Tuple7<T0, T1, T2, T3, T4, T5, T6> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6){ return new Tuple7<>(val0, val1, val2, val3, val4, val5, val6); }
    public static <T0, T1, T2, T3, T4, T5, T6>LockTuple7<T0, T1, T2, T3, T4, T5, T6> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6){ return of(val0, val1, val2, val3, val4, val5, val6).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7>Tuple8<T0, T1, T2, T3, T4, T5, T6, T7> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7){ return new Tuple8<>(val0, val1, val2, val3, val4, val5, val6, val7); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7>LockTuple8<T0, T1, T2, T3, T4, T5, T6, T7> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7){ return of(val0, val1, val2, val3, val4, val5, val6, val7).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8>Tuple9<T0, T1, T2, T3, T4, T5, T6, T7, T8> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8){ return new Tuple9<>(val0, val1, val2, val3, val4, val5, val6, val7, val8); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8>LockTuple9<T0, T1, T2, T3, T4, T5, T6, T7, T8> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>Tuple10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9){ return new Tuple10<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>LockTuple10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>Tuple11<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10){ return new Tuple11<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>LockTuple11<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>Tuple12<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11){ return new Tuple12<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>LockTuple12<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>Tuple13<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12){ return new Tuple13<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>LockTuple13<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>Tuple14<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13){ return new Tuple14<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>LockTuple14<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>Tuple15<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14){ return new Tuple15<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>LockTuple15<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>Tuple16<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15){ return new Tuple16<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>LockTuple16<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>Tuple17<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16){ return new Tuple17<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>LockTuple17<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>Tuple18<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16, T17 val17){ return new Tuple18<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>LockTuple18<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16, T17 val17){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17).lock(); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>Tuple19<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> of(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16, T17 val17, T18 val18){ return new Tuple19<>(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18); }
    public static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>LockTuple19<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> lock(T0 val0, T1 val1, T2 val2, T3 val3, T4 val4, T5 val5, T6 val6, T7 val7, T8 val8, T9 val9, T10 val10, T11 val11, T12 val12, T13 val13, T14 val14, T15 val15, T16 val16, T17 val17, T18 val18){ return of(val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18).lock(); }
    //</generator>
    //</editor-fold>
}