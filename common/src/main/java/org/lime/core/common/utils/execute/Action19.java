package org.lime.core.common.utils.execute;

import org.lime.core.common.utils.tuple.*;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;

// Generated by JavaScript (c) Lime
public interface Action19<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> extends Action1<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<T0,T1>,T2>,T3>,T4>,T5>,T6>,T7>,T8>,T9>,T10>,T11>,T12>,T13>,T14>,T15>,T16>,T17>,T18>> {
    void invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18);
    @Override default void invoke(Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<Tuple2<T0,T1>,T2>,T3>,T4>,T5>,T6>,T7>,T8>,T9>,T10>,T11>,T12>,T13>,T14>,T15>,T16>,T17>,T18> arg0) { invoke(arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val0.val1, arg0.val0.val0.val0.val1, arg0.val0.val0.val1, arg0.val0.val1, arg0.val1); }
    @Override default Object call(Object[] args) { invoke((T0)args[0], (T1)args[1], (T2)args[2], (T3)args[3], (T4)args[4], (T5)args[5], (T6)args[6], (T7)args[7], (T8)args[8], (T9)args[9], (T10)args[10], (T11)args[11], (T12)args[12], (T13)args[13], (T14)args[14], (T15)args[15], (T16)args[16], (T17)args[17], (T18)args[18]); return null; }
    static <T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>Action19<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> of(Method method) {
        return Modifier.isStatic(method.getModifiers()) ?
                (val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18) -> Execute.invoke(method, null, new Object[] { val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18 }) :
                (val0, val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18) -> Execute.invoke(method, val0, new Object[] { val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16, val17, val18 });
    }
}