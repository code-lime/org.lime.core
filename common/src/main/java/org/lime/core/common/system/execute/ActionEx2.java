package org.lime.core.common.system.execute;

// Generated by JavaScript (c) Lime
public interface ActionEx2<T0, T1> extends Callable {
    void invoke(T0 arg0, T1 arg1) throws Throwable;
    default Action2<T0, T1> throwable() {
        return (val0, val1) -> { try { this.invoke(val0, val1); } catch (Throwable e) { throw new IllegalArgumentException(e); } };
    }
    default Func2<T0, T1, Boolean> optional() {
        return (val0, val1) -> { try { this.invoke(val0, val1); return true; } catch (Throwable e) { return false; } };
    }
    @Override default Object call(Object[] args) { return throwable().call(args); }
}