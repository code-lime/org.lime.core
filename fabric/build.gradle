plugins {
    id 'java'
    id 'fabric-loom' version '+'
}

overrideJavaVersion = 17

apply from: '../global.gradle'

dependencies {
    implementation project(':common')
}

versionByteBuddy = project(":common").versionByteBuddy
versionCommonsLang3 = project(":common").versionCommonsLang3
versionGuice = project(":common").versionGuice
versionLiteCommands = project(":common").versionLiteCommands

projectCombineJars(project(':common'))

//<editor-fold desc="Settings: Mod">
var modId = "${group}/${pathName}".toLowerCase().replaceAll("[.:/]", "-");

loom {
    splitEnvironmentSourceSets()
    mods {
        "${modId}" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${versionMinecraft}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${versionLoader}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${versionFabric}"
}

processResources {
    configureProcessResources(delegate, "fabric.mod.json", [
            modId: "${modId}",
            group: "${project.group}",
    ])
}
//</editor-fold>

//<editor-fold desc="Settings: Libraries">
configurations {
    transitiveInclude {
        transitive = true

        exclude group: 'com.mojang'
        exclude group: 'net.fabricmc'
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.jetbrains.kotlinx'
        exclude group: 'com.google.guava'
    }
}
//<editor-fold desc="Settings: Libraries: ByteBuddyAgent">
dependencies {
    modImplementation include("net.bytebuddy:byte-buddy-agent:${versionByteBuddy}")
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: Commons Lang v3">
dependencies {
    transitiveInclude implementation("org.apache.commons:commons-lang3:${versionCommonsLang3}")
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: Adventure">
repositories {
    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
    mavenCentral()
}

dependencies {
    modImplementation include("net.kyori:adventure-platform-fabric:${versionAdventure}")
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: com.google.inject#guice">
dependencies {
    transitiveInclude implementation("com.google.inject:guice:${versionGuice}")
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: LiteCommands">
repositories {
    maven {
        url "https://repo.panda-lang.org/releases"
    }
}

dependencies {
    modImplementation include("dev.rollczi:litecommands-fabric:${versionLiteCommands}")
}
//</editor-fold>
afterEvaluate {
    def added = new HashSet<String>()

    configurations.transitiveInclude.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        def id = artifact.moduleVersion.id
        def notation = "${id.group}:${id.name}:${id.version}"

        if (!added.contains(notation)) {
            logger.lifecycle("Adding transitive include -> ${notation}")
            dependencies.add("include", notation)
            added.add(notation)
        } else {
            logger.debug("Already added: ${notation}")
        }
    }
}
//</editor-fold>

println("FABRIC: ${group}/${pathName}#${version}")
