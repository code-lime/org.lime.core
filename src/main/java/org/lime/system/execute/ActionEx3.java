package org.lime.system.execute;

// Generated by JavaScript (c) Lime
public interface ActionEx3<T0, T1, T2> extends ICallable {
    void invoke(T0 arg0, T1 arg1, T2 arg2) throws Throwable;
    default Action3<T0, T1, T2> throwable() {
        return (val0, val1, val2) -> { try { this.invoke(val0, val1, val2); } catch (Throwable e) { throw new IllegalArgumentException(e); } };
    }
    default Func3<T0, T1, T2, Boolean> optional() {
        return (val0, val1, val2) -> { try { this.invoke(val0, val1, val2); return true; } catch (Throwable e) { return false; } };
    }
    @Override default Object call(Object[] args) { return throwable().call(args); }
}