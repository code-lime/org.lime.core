package org.lime.system.execute;

import org.lime.system.toast.*;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;

// Generated by JavaScript (c) Lime
public interface Action4<T0, T1, T2, T3> extends Action1<Toast2<Toast2<Toast2<T0,T1>,T2>,T3>> {
    void invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3);
    @Override default void invoke(Toast2<Toast2<Toast2<T0,T1>,T2>,T3> arg0) { invoke(arg0.val0.val0.val0, arg0.val0.val0.val1, arg0.val0.val1, arg0.val1); }
    @Override default Object call(Object[] args) { invoke((T0)args[0], (T1)args[1], (T2)args[2], (T3)args[3]); return null; }
    static <T0, T1, T2, T3>Action4<T0, T1, T2, T3> of(Method method) {
        return Modifier.isStatic(method.getModifiers()) ?
                (val0, val1, val2, val3) -> Execute.invoke(method, null, new Object[] { val0, val1, val2, val3 }) :
                (val0, val1, val2, val3) -> Execute.invoke(method, val0, new Object[] { val1, val2, val3 });
    }
}